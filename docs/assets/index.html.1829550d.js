import{_ as o,r as t,o as p,c,a as s,b as l,F as r,e,d as n}from"./app.dab5a0a6.js";const i={},y=e('<h1 id="other-packages" tabindex="-1"><a class="header-anchor" href="#other-packages" aria-hidden="true">#</a> Other Packages</h1><p>While we think you can get really far in R with just <strong>data.table</strong> and <strong>fixest</strong>, of course these two packages don&#39;t cover everything.</p><p>This page covers a small list of packages you may find especially useful when getting started with R. We won&#39;t try to cover everything under the sun here. Just a few places to get going. For the rest, well, that&#39;s what StackOverflow or your favourite search engine is for.</p><p>All of the below packages have far more applications than is shown here. We&#39;ll just provide one or two examples of how each can be used. Finally, don&#39;t forget to install them with <code>install.packages(&#39;PKGNAME&#39;)</code> and load them with <code>library(PKGNAME)</code>. The former command you only have to run once per package (or as often as you want to update it); the latter whenever you want to use a package in a new R session.</p><h2 id="ggplot2" tabindex="-1"><a class="header-anchor" href="#ggplot2" aria-hidden="true">#</a> ggplot2</h2><p><em>Beautiful and customizable plots</em></p>',6),E={href:"https://ggplot2.tidyverse.org/",target:"_blank",rel:"noopener noreferrer"},d=s("strong",null,"ggplot2",-1),F=n(" is widely considered one of the preeminent plotting libraries available in any language. It provides an intuitive syntax that applies in the same way across many, many different kinds of vizualisations, and with a deep level of customization. Plus, endless additional plugins to do what you want, including easy interactivity, animation, maps, etc. We thought about giving "),u=s("strong",null,"ggplot2",-1),m=n(" its own dedicated page like "),h=s("strong",null,"data.table",-1),f=n(" and "),b=s("strong",null,"fixest",-1),D=n(". But instead we'll point you to the "),g={href:"https://lost-stats.github.io/Presentation/Figures/Figures.html",target:"_blank",rel:"noopener noreferrer"},v=n("Figures"),_=n(" section of the "),A=s("em",null,"Library of Statistical Techniques",-1),k=n(", which already shows how to do many different graphing tasks in both Stata and "),w=s("strong",null,"ggplot2",-1),C=n(". For a more in-depth overview you can always consult the excellent "),x={href:"https://ggplot2.tidyverse.org/",target:"_blank",rel:"noopener noreferrer"},B=n("package documentation"),q=n(", or a book like Kieran Healy's wonderful "),S={href:"https://socviz.co/",target:"_blank",rel:"noopener noreferrer"},T=s("em",null,"Data Visualization",-1),R=n("."),j=e(`<h4 id="basic-scatterplot" tabindex="-1"><a class="header-anchor" href="#basic-scatterplot" aria-hidden="true">#</a> Basic scatterplot</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">twoway</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">scatter</span><span style="color:#E0DEF4;"> yvar xvar</span></span>
<span class="line"><span style="color:#31748F;">twoway</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(scatter</span><span style="color:#E0DEF4;"> yvar xvar </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> group </span><span style="color:#31748F;">==</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">1</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mc</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">blue</span><span style="color:#6E6A86;">)</span><span style="color:#31748F;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">\\\\</span><span style="color:#E0DEF4;">\\</span></span>
<span class="line"><span style="color:#E0DEF4;">        </span><span style="color:#31748F;">(scatter</span><span style="color:#E0DEF4;"> yvar xvar </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> group </span><span style="color:#31748F;">==</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">2</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mc</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">red</span><span style="color:#6E6A86;">)</span><span style="color:#31748F;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">ggplot</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">aes</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">x</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">xvar</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">y</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">yvar</span><span style="color:#6E6A86;">))</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">geom_point</span><span style="color:#6E6A86;">()</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">ggplot</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">aes</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">x</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">xvar</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">y</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">yvar</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">color</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">group</span><span style="color:#6E6A86;">))</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"><span style="color:#E0DEF4;">  </span><span style="color:#E0DEF4;font-style:italic;">geom_point</span><span style="color:#6E6A86;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div></div><h2 id="tidyverse" tabindex="-1"><a class="header-anchor" href="#tidyverse" aria-hidden="true">#</a> tidyverse</h2><p><em>A family of data science tools</em></p>`,4),z=n("The "),W={href:"https://www.tidyverse.org/",target:"_blank",rel:"noopener noreferrer"},Y=s("strong",null,"tidyverse",-1),X=e(" provides an extremely popular framework for data science tasks in R. This meta-package is actually a collection of smaller packages that are all designed to work together, based on a shared philosophy and syntax. We&#39;ve already covered <strong>ggplot2</strong> above, but there are plenty more. These include <strong>dplyr</strong> and <strong>tidyr</strong>, which offer an alternative syntax and approach to data wrangling tasks. While we personally recommend <strong>data.table</strong>, these <strong>tidyverse</strong> packages have many ardent fans too. You may find that you prefer their modular design and verbal syntax. But don&#39;t feel bound either way: it&#39;s totally fine to combine them. Some other <strong>tidyverse</strong> packages worth knowing about include <strong>purrr</strong>, which contains a suite of functions for automating and looping your work, <strong>lubridate</strong> which makes working with date-based data easy, and <strong>stringr</strong> which offers functions with straightforward syntax for working with string variables.",19),N=e(`<h4 id="data-wrangling-with-dplyr" tabindex="-1"><a class="header-anchor" href="#data-wrangling-with-dplyr" aria-hidden="true">#</a> Data wrangling with dplyr</h4><p><em>Note: <strong>dplyr</strong> doesn&#39;t modify data in place. So you&#39;ll need to (re)assign if you want to keep your changes. E.g. <code>dat = dat %&gt;% group_by...</code></em></p><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Subset by rows and then columns</span></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> var1</span><span style="color:#31748F;">==</span><span style="color:#F6C177;">&quot;value&quot;</span></span>
<span class="line"><span style="color:#31748F;">keep</span><span style="color:#E0DEF4;"> var1 var2 var3</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Create a new variable by group</span></span>
<span class="line"><span style="color:#31748F;">bysort</span><span style="color:#E0DEF4;"> group1</span><span style="color:#6E6A86;">:</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">egen</span><span style="color:#E0DEF4;"> mean_var1 </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">var1</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Collapse by group</span></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> arr_delay</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">by</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">carrier</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Subset by rows and then columns</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">%&gt;%</span><span style="color:#E0DEF4;">   </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> \`%&gt;%\` is the tidyverse &quot;pipe&quot; operator</span></span>
<span class="line"><span style="color:#E0DEF4;">   </span><span style="color:#EB6F92;font-style:italic;">filter</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">var1</span><span style="color:#31748F;">==</span><span style="color:#F6C177;">&quot;value&quot;</span><span style="color:#E0DEF4;">) </span><span style="color:#31748F;">%&gt;%</span></span>
<span class="line"><span style="color:#E0DEF4;">   </span><span style="color:#E0DEF4;font-style:italic;">select</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">var1</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">var2</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">var3</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Create a new variable by group</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">%&gt;%</span></span>
<span class="line"><span style="color:#E0DEF4;">  </span><span style="color:#E0DEF4;font-style:italic;">group_by</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">group1</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">%&gt;%</span></span>
<span class="line"><span style="color:#E0DEF4;">  </span><span style="color:#E0DEF4;font-style:italic;">mutate</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">mean_var1</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">var1</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Collapse by group</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">%&gt;%</span></span>
<span class="line"><span style="color:#E0DEF4;">  </span><span style="color:#E0DEF4;font-style:italic;">group_by</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">group1</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">%&gt;%</span></span>
<span class="line"><span style="color:#E0DEF4;">  </span><span style="color:#E0DEF4;font-style:italic;">summarise</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">mean_var1</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">mean</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">var1</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></div></div><h4 id="manipulating-dates-with-lubridate" tabindex="-1"><a class="header-anchor" href="#manipulating-dates-with-lubridate" aria-hidden="true">#</a> Manipulating dates with lubridate</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Shift a date forward one month (not 30 days, one month)</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> ???</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Shift a date forward one month (not 30 days, one month)</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">shifted_date</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">date</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">months</span><span style="color:#E0DEF4;">(</span><span style="color:#EBBCBA;">1</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div></div><h4 id="iterating-with-purrr" tabindex="-1"><a class="header-anchor" href="#iterating-with-purrr" aria-hidden="true">#</a> Iterating with purrr</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Read in many files and append them together</span></span>
<span class="line"><span style="color:#31748F;">local</span><span style="color:#E0DEF4;"> </span><span style="color:#9CCFD8;">filelist</span><span style="color:#31748F;">:</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">dir</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;Data/&quot;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">files</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;*.dta&quot;</span></span>
<span class="line"><span style="color:#31748F;">local</span><span style="color:#E0DEF4;"> </span><span style="color:#9CCFD8;">firsttime</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">1</span></span>
<span class="line"><span style="color:#31748F;">foreach</span><span style="color:#E0DEF4;"> </span><span style="color:#9CCFD8;">f</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">in</span><span style="color:#E0DEF4;"> filelist </span><span style="color:#31748F;">{</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#31748F;">use</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">f</span><span style="color:#F6C177;">&#39;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">clear</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#31748F;">if</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">firsttime</span><span style="color:#F6C177;">&#39;</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">==</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">0</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">{</span></span>
<span class="line"><span style="color:#E0DEF4;">        </span><span style="color:#31748F;">append</span><span style="color:#E0DEF4;"> using compiled_data.dta</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#31748F;">}</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#31748F;">save</span><span style="color:#E0DEF4;"> compiled_data.dta</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> replace</span></span>
<span class="line"><span style="color:#31748F;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Read in many files and append them together</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> (this combines purrr with the data.table function fread)</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">filelist</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">list.files</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&#39;Data/&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">pattern</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;.csv&#39;</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">dat</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">filelist</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">%&gt;%</span></span>
<span class="line"><span style="color:#E0DEF4;">    </span><span style="color:#E0DEF4;font-style:italic;">map_df</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">fread</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div><h4 id="string-operations-with-stringr" tabindex="-1"><a class="header-anchor" href="#string-operations-with-stringr" aria-hidden="true">#</a> String operations with stringr</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#EB6F92;font-style:italic;">subinstr</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">string</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;remove&quot;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;replace&quot;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;">.</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#EB6F92;font-style:italic;">substr</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">string</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">start</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">length</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#EB6F92;font-style:italic;">regex</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">string</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;regex&quot;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">str_replace_all</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">string</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;remove&quot;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;replace&quot;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">str_sub</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">string</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">start</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">end</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">str_detect</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">string</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;regex&quot;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Note all the stringr functions accept regex input</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div></div><h2 id="collapse" tabindex="-1"><a class="header-anchor" href="#collapse" aria-hidden="true">#</a> collapse</h2><p><em>Extra convenience functions and super fast aggregations</em></p>`,11),M=n("Sure, we've gone on and on about how fast "),H=s("strong",null,"data.table",-1),I=n(" is compared to just about everything else. But there is another R package that can boast even faster computation times for certain grouped calculations and transformations, and that's "),Z={href:"https://sebkrantz.github.io/collapse/index.html",target:"_blank",rel:"noopener noreferrer"},L=n("collapse"),O=n(". The "),P=s("strong",null,"collapse",-1),V=n(" package doesn't try to do everything that "),G=s("strong",null,"data.table",-1),J=n(" does. But the two "),K={href:"https://sebkrantz.github.io/collapse/articles/collapse_and_data.table.html",target:"_blank",rel:"noopener noreferrer"},Q=n("play very well together"),U=n(" and the former offers some convenience functions like "),$=s("code",null,"descr",-1),ss=n(" and "),ns=s("code",null,"collap",-1),as=n(", which essentially mimic the equivalent functions in Stata and might be particularly appealing to readers of this guide. (P.S. If you'd like to load "),ls=s("strong",null,"data.table",-1),es=n(" and "),os=s("strong",null,"collapse",-1),ts=n(" at the same time, plus some other high-performance packages, check out the "),ps={href:"https://sebkrantz.github.io/fastverse/index.html",target:"_blank",rel:"noopener noreferrer"},cs=s("strong",null,"fastverse",-1),rs=n(".)"),is=e(`<h4 id="quick-summaries" tabindex="-1"><a class="header-anchor" href="#quick-summaries" aria-hidden="true">#</a> Quick Summaries</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">summarize</span></span>
<span class="line"><span style="color:#31748F;">describe</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">qsu</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">descr</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div></div><h4 id="multiple-grouped-aggregations" tabindex="-1"><a class="header-anchor" href="#multiple-grouped-aggregations" aria-hidden="true">#</a> Multiple grouped aggregations</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(mean)</span><span style="color:#E0DEF4;"> var1</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">by</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">group1</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">collapse</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">(</span><span style="color:#E0DEF4;">min</span><span style="color:#31748F;">)</span><span style="color:#E0DEF4;"> min_var1</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;">var1 min_var2</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;">var2 </span><span style="color:#31748F;">(</span><span style="color:#E0DEF4;">max</span><span style="color:#31748F;">)</span><span style="color:#E0DEF4;"> max_var1</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;">var1 max_var2</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;">var2</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">by</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">group1</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">group2</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#E0DEF4;font-style:italic;">collap</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">var1</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">group1</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">fmean</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> &#39;fmean&#39; =&gt; fast mean</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">collap</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">var1</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">var2</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">group1</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">group2</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">FUN</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">list</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">fmin</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">fmax</span><span style="color:#6E6A86;">))</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div></div><h2 id="sandwich" tabindex="-1"><a class="header-anchor" href="#sandwich" aria-hidden="true">#</a> sandwich</h2><p><em>More standard error adjustments</em></p>`,6),ys=s("strong",null,"fixest",-1),Es=n(" package comes with plenty of shortcuts for accessing standard error adjustments like HC1 heteroskedasticity-robust standard errors, Newey-West, Driscoll-Kraay, clustered standard errors, etc. But of course there are still more than that. A host of additional options are covered by the "),ds={href:"https://sandwich.r-forge.r-project.org/",target:"_blank",rel:"noopener noreferrer"},Fs=s("strong",null,"sandwich",-1),us=n(" package, which comes with a long list of functions like "),ms=s("code",null,"vcovBS()",-1),hs=n(" for bootstrapped standard errors, or "),fs=s("code",null,"vcovHC()",-1),bs=n(" for HC1-5. "),Ds=s("strong",null,"sandwich",-1),gs=n(" supports nearly every model class in R, so it shouldn't surprise that these can slot right into "),vs=s("code",null,"fixest",-1),_s=n(" estimates, too. You shouldn't be using those "),As=s("code",null,", robust",-1),ks=n(" errors for smaller samples anyway... but you "),ws={href:"http://datacolada.org/99",target:"_blank",rel:"noopener noreferrer"},Cs=n("knew that"),xs=n(", right?"),Bs=e(`<h4 id="linear-model-adjustments" tabindex="-1"><a class="header-anchor" href="#linear-model-adjustments" aria-hidden="true">#</a> Linear Model Adjustments</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> &quot;, robust&quot; uses hc1 which isn&#39;t great for small samples</span></span>
<span class="line"><span style="color:#31748F;">regress</span><span style="color:#E0DEF4;"> Y X Z</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">vce</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">hc3</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> sandwich&#39;s vcovHC uses HC3 by default</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">feols</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">Y</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">X</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">Z</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">,</span><span style="color:#C4A7E7;font-style:italic;">vcov</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> sandwich</span><span style="color:#31748F;">::</span><span style="color:#E0DEF4;font-style:italic;">vcovHC</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Aside: Remember that you can also adjust the SEs </span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> for existing models on the fly </span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">m</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">feols</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">Y</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">X</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">Z</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"><span style="color:#EB6F92;font-style:italic;">summary</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">m</span><span style="color:#E0DEF4;">, </span><span style="color:#C4A7E7;font-style:italic;">vcov</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> sandwich</span><span style="color:#31748F;">::</span><span style="color:#E0DEF4;font-style:italic;">vcovHC</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div></div><h2 id="modelsummary" tabindex="-1"><a class="header-anchor" href="#modelsummary" aria-hidden="true">#</a> modelsummary</h2><p><em>Summary tables, regression tables, and more</em></p>`,4),qs=n("The "),Ss=s("strong",null,"fixest",-1),Ts=n(" package already has the "),Rs=s("code",null,"etable()",-1),js=n(" function for generating regression tables. However, it is only really intended to work with models from the same package. So we also recommend checking out the fantastic "),zs={href:"https://vincentarelbundock.github.io/modelsummary",target:"_blank",rel:"noopener noreferrer"},Ws=s("strong",null,"modelsummary",-1),Ys=n(" package. It works with all sorts of model objects, including those not from "),Xs=s("strong",null,"fixest",-1),Ns=n(", is incredibly customizable, and outputs to a bunch of different formats (PDF, HTML, DOCX, etc.) Similarly, "),Ms=s("strong",null,"modelsummary",-1),Hs=n(" has a wealth of options for producing publication-ready summary tables. Oh, and it produces coefficient plots too. Check out the "),Is={href:"https://vincentarelbundock.github.io/modelsummary/",target:"_blank",rel:"noopener noreferrer"},Zs=n("package website"),Ls=n(" for more."),Os=e(`<h4 id="summary-tables" tabindex="-1"><a class="header-anchor" href="#summary-tables" aria-hidden="true">#</a> Summary tables</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Summary stats table </span></span>
<span class="line"><span style="color:#31748F;">estpost</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">summarize</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"><span style="color:#31748F;">esttab</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">cells</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&quot;count mean sd min max&quot;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> nomtitle nonumber </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Balance table </span></span>
<span class="line"><span style="color:#31748F;">by</span><span style="color:#E0DEF4;"> treat_var</span><span style="color:#6E6A86;">:</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">eststo</span><span style="color:#6E6A86;">:</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">estpost</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">summarize</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"><span style="color:#31748F;">esttab</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">cells</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&quot;mean sd&quot;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> label nodepvar</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Summary stats table </span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">datasummary_skim</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Balance table </span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">datasummary_balance</span><span style="color:#6E6A86;">(</span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;font-style:italic;">treat_var</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div></div><h4 id="regression-tables" tabindex="-1"><a class="header-anchor" href="#regression-tables" aria-hidden="true">#</a> Regression tables</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">reg</span><span style="color:#E0DEF4;"> Y X Z </span></span>
<span class="line"><span style="color:#31748F;">eststo</span><span style="color:#E0DEF4;"> est1 </span></span>
<span class="line"><span style="color:#31748F;">esttab</span><span style="color:#E0DEF4;"> est1b</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">reg</span><span style="color:#E0DEF4;"> Y X Z</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">vce</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">hc3</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"><span style="color:#31748F;">eststo</span><span style="color:#E0DEF4;"> est1b </span></span>
<span class="line"><span style="color:#31748F;">esttab</span><span style="color:#E0DEF4;"> est1b </span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">esttab</span><span style="color:#E0DEF4;"> est1 est1b</span></span>
<span class="line"></span>
<span class="line"><span style="color:#31748F;">reg</span><span style="color:#E0DEF4;"> Y X Z A</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">vce</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">hc3</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#31748F;">eststo</span><span style="color:#E0DEF4;"> est2</span></span>
<span class="line"><span style="color:#31748F;">esttab</span><span style="color:#E0DEF4;"> est1 est1b est2</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">est1</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">lm</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">Y</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">X</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">Z</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">) </span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">msummary</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">est1</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> msummary() = alias for modelsummary()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Like fixest::etable(), SEs for existing models can</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> be adjusted on-the-fly </span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">msummary</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">est1</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">vcov</span><span style="color:#31748F;">=</span><span style="color:#F6C177;">&#39;hc3&#39;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Multiple SEs for the same model</span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">msummary</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">est1</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">vcov</span><span style="color:#31748F;">=list</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&#39;iid&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;hc3&#39;</span><span style="color:#6E6A86;">))</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">est3</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">lm</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">Y</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">X</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">Z</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">A</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#E0DEF4;">) </span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">msummary</span><span style="color:#6E6A86;">(</span><span style="color:#31748F;">list</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">est1</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">est1</span><span style="color:#E0DEF4;">, </span><span style="color:#E0DEF4;font-style:italic;">est3</span><span style="color:#6E6A86;">),</span></span>
<span class="line"><span style="color:#E0DEF4;">         </span><span style="color:#C4A7E7;font-style:italic;">vcov</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">list</span><span style="color:#6E6A86;">(</span><span style="color:#F6C177;">&#39;iid&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;hc3&#39;</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;hc3&#39;</span><span style="color:#6E6A86;">))</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div></div><h2 id="lme4" tabindex="-1"><a class="header-anchor" href="#lme4" aria-hidden="true">#</a> lme4</h2><p><em>Random effects and mixed models</em></p>`,6),Ps=s("strong",null,"fixest",-1),Vs=n(" can do a lot, but it can't do everything. This site isn't even going to attempt to go into how to translate every single model into R. But we'll quick highlight random-effects and mixed models. The "),Gs={href:"https://cran.r-project.org/web/packages/lme4/index.html",target:"_blank",rel:"noopener noreferrer"},Js=s("strong",null,"lme4",-1),Ks=n(" and its "),Qs=s("code",null,"lmer()",-1),Us=n(" function covers not just random-intercept models but also hierarchical models where slope coefficients follow random distributions. ("),$s=s("strong",null,"Aside:",-1),sn=n(" If you prefer Bayesian models for this kind of thing, check out the ["),nn=s("strong",null,"brms",-1),an=n("](package website).)"),ln=e(`<h4 id="random-effects-and-mixed-models" tabindex="-1"><a class="header-anchor" href="#random-effects-and-mixed-models" aria-hidden="true">#</a> Random effects and mixed models</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">xtset</span><span style="color:#E0DEF4;"> group time</span></span>
<span class="line"><span style="color:#31748F;">xtreg</span><span style="color:#E0DEF4;"> Y X</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> re</span></span>
<span class="line"><span style="color:#E0DEF4;">mixed lifeexp </span><span style="color:#31748F;">||</span><span style="color:#E0DEF4;"> countryn</span><span style="color:#6E6A86;">:</span><span style="color:#E0DEF4;"> gdppercap</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> No need for an xtset equivalent</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">m</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">lmer</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">Y</span><span style="color:#31748F;">~</span><span style="color:#6E6A86;">(</span><span style="color:#EBBCBA;">1</span><span style="color:#31748F;">|</span><span style="color:#E0DEF4;font-style:italic;">group</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">X</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">data</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">nm</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">lmer</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">Y</span><span style="color:#31748F;">~</span><span style="color:#6E6A86;">(</span><span style="color:#EBBCBA;">1</span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;font-style:italic;">x</span><span style="color:#31748F;">|</span><span style="color:#E0DEF4;font-style:italic;">group</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">X</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">data</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div></div><h2 id="marginaleffects" tabindex="-1"><a class="header-anchor" href="#marginaleffects" aria-hidden="true">#</a> marginaleffects</h2><p><em>Marginal effects, constrasts, etc.</em></p>`,4),en=n("The Stata "),on=s("code",null,"margins",-1),tn=n(" command is great. To replicate it in R, we highly recommend the "),pn={href:"https://vincentarelbundock.github.io/marginaleffects/",target:"_blank",rel:"noopener noreferrer"},cn=s("strong",null,"marginaleffects",-1),rn=n(" package. Individual marginal effects or average marginal effects for nonlinear models, or models with interactions or transformations, etc. It's also very fast."),yn=e(`<h4 id="basic-logit-marginal-effects" tabindex="-1"><a class="header-anchor" href="#basic-logit-marginal-effects" aria-hidden="true">#</a> Basic logit marginal effects</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> A logit:</span></span>
<span class="line"><span style="color:#31748F;">logit</span><span style="color:#E0DEF4;"> Y X Z</span></span>
<span class="line"><span style="color:#E0DEF4;">margins</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">dydx</span><span style="color:#6E6A86;">(</span><span style="color:#31748F;">*</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> This example incorporates the fixest function feglm()</span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">m</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">feglm</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">Y</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">X</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">Z</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">family</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">binomial</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">data</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">mtcars</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#EB6F92;font-style:italic;">summary</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">marginaleffects</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">m</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div></div><h2 id="multcomp-nlwaldtest" tabindex="-1"><a class="header-anchor" href="#multcomp-nlwaldtest" aria-hidden="true">#</a> multcomp / nlWaldTest</h2><p><em>Joint coefficient tests</em></p>`,4),En=n("Stata provides a number of inbuilt commands for (potentially complex) postestimation coefficient tests. We've already seen the "),dn=s("code",null,"testparm",-1),Fn=n(" command equivalent with "),un=s("code",null,"fixest::wald()",-1),mn=n(". But what about combinations of coefficients "),hn=s("em",null,"a la",-1),fn=n(" Stata's "),bn=s("code",null,"lincom",-1),Dn=n(" and "),gn=s("code",null,"nlcom",-1),vn=n(" commands? The "),_n={href:"http://multcomp.r-forge.r-project.org/",target:"_blank",rel:"noopener noreferrer"},An=s("strong",null,"multcomp",-1),kn=n(" package handles a variety of linear tests and combinations, while "),wn={href:"https://cran.r-project.org/web/packages/nlWaldTest/index.html",target:"_blank",rel:"noopener noreferrer"},Cn=s("strong",null,"nlWaldTest",-1),xn=n(" has you covered for nonlinear combinations."),Bn=e(`<h4 id="test-other-null-hypotheses-and-coefficient-combinations" tabindex="-1"><a class="header-anchor" href="#test-other-null-hypotheses-and-coefficient-combinations" aria-hidden="true">#</a> Test other null hypotheses and coefficient combinations</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#31748F;">regress</span><span style="color:#E0DEF4;"> y x z </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> One-sided test </span></span>
<span class="line"><span style="color:#31748F;">test</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;font-style:italic;">_b</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">x</span><span style="color:#6E6A86;">]</span><span style="color:#31748F;">=</span><span style="color:#EBBCBA;">0</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"><span style="color:#31748F;">local</span><span style="color:#E0DEF4;"> </span><span style="color:#9CCFD8;">sign_wgt</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">sign</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">_b</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">x</span><span style="color:#6E6A86;">])</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"><span style="color:#31748F;">display</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;H0: coef &amp;lt;= 0  p-value = &quot;</span><span style="color:#E0DEF4;"> </span><span style="color:#EB6F92;font-style:italic;">ttail</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">r</span><span style="color:#31748F;">(</span><span style="color:#C4A7E7;font-style:italic;">df_r</span><span style="color:#31748F;">)</span><span style="color:#6E6A86;">,</span><span style="color:#F6C177;">\`</span><span style="color:#9CCFD8;">sign_wgt</span><span style="color:#F6C177;">&#39;</span><span style="color:#31748F;">*</span><span style="color:#C4A7E7;font-style:italic;">sqrt</span><span style="color:#31748F;">(</span><span style="color:#EB6F92;font-style:italic;">r</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">F</span><span style="color:#6E6A86;">)</span><span style="color:#31748F;">)</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Test linear combination of coefficients </span></span>
<span class="line"><span style="color:#31748F;">lincom</span><span style="color:#E0DEF4;"> x </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> z </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Test nonlinear combination of coefficients </span></span>
<span class="line"><span style="color:#31748F;">nlcom</span><span style="color:#E0DEF4;"> </span><span style="color:#EBBCBA;font-style:italic;">_b</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">x</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;">/</span><span style="color:#EBBCBA;font-style:italic;">_b</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">z</span><span style="color:#6E6A86;">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#C4A7E7;font-style:italic;">m</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">feols</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">y</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">~</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">x</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">z</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">dat</span><span style="color:#6E6A86;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> One-sided test </span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">m2</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> multcomp</span><span style="color:#31748F;">::</span><span style="color:#E0DEF4;font-style:italic;">ghlt</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">m</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;x&amp;lt;=0&#39;</span><span style="color:#6E6A86;">)</span></span>
<span class="line"><span style="color:#EB6F92;font-style:italic;">summary</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">m2</span><span style="color:#E0DEF4;">) </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Test linear combination of coefficients </span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">m3</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> multcomp</span><span style="color:#31748F;">::</span><span style="color:#E0DEF4;font-style:italic;">glht</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">m</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;x + z = 0&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span></span>
<span class="line"><span style="color:#EB6F92;font-style:italic;">summary</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">m3</span><span style="color:#E0DEF4;">) </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> or confint(m3) </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Test nonlinear combination of coefficients </span></span>
<span class="line"><span style="color:#E0DEF4;">nlWaldtest</span><span style="color:#31748F;">::</span><span style="color:#E0DEF4;font-style:italic;">nlWaldtest</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">m</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&#39;b[2]/b[3]&#39;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;"> </span><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> or nlWaldtest::nlConfint()</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div></div><h2 id="sf" tabindex="-1"><a class="header-anchor" href="#sf" aria-hidden="true">#</a> sf</h2><p><em>Geospatial operations</em></p>`,4),qn=n("R has outstanding support for geospatial computation and mapping. There are a variety of packages to choose from here, depending on what you want (e.g. vector vs raster data, interactive maps, high-dimensional data cubes, etc.) But the workhorse geospatial tool for most R users is the incredibly versatile "),Sn={href:"https://r-spatial.github.io/sf/",target:"_blank",rel:"noopener noreferrer"},Tn=s("strong",null,"sf",-1),Rn=n(" package. We'll only provide a simple mapping example below. The "),jn=s("strong",null,"sf",-1),zn=n(),Wn={href:"https://r-spatial.github.io/sf/",target:"_blank",rel:"noopener noreferrer"},Yn=n("website"),Xn=n(" has several in-depth tutorials, and we also recommend the "),Nn={href:"https://geocompr.robinlovelace.net/",target:"_blank",rel:"noopener noreferrer"},Mn=s("em",null,"Geocomputation with R",-1),Hn=n(" book by Robin Lovelace, Jakub Nowosad, and Jannes Muenchow."),In=e(`<h4 id="simple-map" tabindex="-1"><a class="header-anchor" href="#simple-map" aria-hidden="true">#</a> Simple Map</h4><div class="code--container"><div><div class="language-stata ext-stata line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> Mapping in Stata requires the spmap and shp2dta </span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> commands, and also that you convert your (say) </span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> shapefile to .dta format first. We won&#39;t go through </span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> all that here, but see: </span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">*</span><span style="color:#555169;font-style:italic;"> https://www.stata.com/support/faqs/graphics/spmap-and-maps/</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><div><div class="language-r ext-r line-numbers-mode"><pre class="shiki" style="background-color:#191724;"><code><span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> This example uses the North Carolina shapefile that is</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> bundled with the sf package. </span></span>
<span class="line"><span style="color:#C4A7E7;font-style:italic;">nc</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">st_read</span><span style="color:#6E6A86;">(</span><span style="color:#EB6F92;font-style:italic;">system.file</span><span style="color:#E0DEF4;">(</span><span style="color:#F6C177;">&quot;shape/nc.shp&quot;</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#C4A7E7;font-style:italic;">package</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;"> </span><span style="color:#F6C177;">&quot;sf&quot;</span><span style="color:#6E6A86;">)</span><span style="color:#E0DEF4;">) </span></span>
<span class="line"><span style="color:#EB6F92;font-style:italic;">plot</span><span style="color:#E0DEF4;">(</span><span style="color:#E0DEF4;font-style:italic;">nc</span><span style="color:#6E6A86;">[</span><span style="color:#E0DEF4;">, </span><span style="color:#F6C177;">&#39;BIR74&#39;</span><span style="color:#6E6A86;">]</span><span style="color:#E0DEF4;">)</span></span>
<span class="line"><span style="color:#6E6A86;font-style:italic;">#</span><span style="color:#555169;font-style:italic;"> Or, if you have ggplot2 loaded: </span></span>
<span class="line"><span style="color:#E0DEF4;font-style:italic;">ggplot</span><span style="color:#6E6A86;">(</span><span style="color:#E0DEF4;font-style:italic;">nc</span><span style="color:#6E6A86;">,</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">aes</span><span style="color:#6E6A86;">(</span><span style="color:#C4A7E7;font-style:italic;">fill</span><span style="color:#31748F;">=</span><span style="color:#E0DEF4;font-style:italic;">BIR74</span><span style="color:#6E6A86;">))</span><span style="color:#E0DEF4;"> </span><span style="color:#31748F;">+</span><span style="color:#E0DEF4;"> </span><span style="color:#E0DEF4;font-style:italic;">geom_sf</span><span style="color:#6E6A86;">()</span></span>
<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div></div>`,2);function Zn(Ln,On){const a=t("ExternalLinkIcon");return p(),c(r,null,[y,s("p",null,[s("a",E,[d,l(a)]),F,u,m,h,f,b,D,s("a",g,[v,l(a)]),_,A,k,w,C,s("a",x,[B,l(a)]),q,s("a",S,[T,l(a)]),R]),j,s("p",null,[z,s("a",W,[Y,l(a)]),X]),N,s("p",null,[M,H,I,s("a",Z,[L,l(a)]),O,P,V,G,J,s("a",K,[Q,l(a)]),U,$,ss,ns,as,ls,es,os,ts,s("a",ps,[cs,l(a)]),rs]),is,s("p",null,[ys,Es,s("a",ds,[Fs,l(a)]),us,ms,hs,fs,bs,Ds,gs,vs,_s,As,ks,s("a",ws,[Cs,l(a)]),xs]),Bs,s("p",null,[qs,Ss,Ts,Rs,js,s("a",zs,[Ws,l(a)]),Ys,Xs,Ns,Ms,Hs,s("a",Is,[Zs,l(a)]),Ls]),Os,s("p",null,[Ps,Vs,s("a",Gs,[Js,l(a)]),Ks,Qs,Us,$s,sn,nn,an]),ln,s("p",null,[en,on,tn,s("a",pn,[cn,l(a)]),rn]),yn,s("p",null,[En,dn,Fn,un,mn,hn,fn,bn,Dn,gn,vn,s("a",_n,[An,l(a)]),kn,s("a",wn,[Cn,l(a)]),xn]),Bn,s("p",null,[qn,s("a",Sn,[Tn,l(a)]),Rn,jn,zn,s("a",Wn,[Yn,l(a)]),Xn,s("a",Nn,[Mn,l(a)]),Hn]),In],64)}var Vn=o(i,[["render",Zn]]);export{Vn as default};
